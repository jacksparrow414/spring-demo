version: 2.1
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/spring

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch 
      
    steps: # a collection of executable commands
    
    # check out source code to working directory
      - checkout 
      
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: spring-{{ checksum "pom.xml" }}
      # gets the project dependencies
      - run: 
          name: get dependency
          command: mvn dependency:go-offline 
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: spring-{{ checksum "pom.xml" }}
      # run the actual t
      - run:
          name: sign start
          command: echo "building start"
      # 执行构建 
      - run: 
          name: build project
          command: mvn package 
      - run:
          name: build success
          command: echo "build success"
          when: on_success
          
      - run:
          name: build fail
          command: echo "build fail"
          when: on_fail
      # 存储测试结果
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
        # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
            path: target/surefire-reports
        
      - store_artifacts: # store the uberjar as an artifact
        # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
            path: target/spring-0.0.1-SNAPSHOT.jar
        # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples 
workflows:
  version: 2
  commit-workflow:
    jobs:
      - build
  forked-commit-workflow:
    jobs:
      - build:
        filters:
          branches:
            only: /^[A-Za-z0-9].*/
  scheduled-workflow:
    triggers:
      - schedule:
           cron: "0 0 * * *"
           filters:
             branches:
               only:
                 - master
                 - beta
    jobs:
      - build

